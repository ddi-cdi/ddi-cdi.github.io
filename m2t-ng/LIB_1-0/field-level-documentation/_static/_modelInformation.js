var modelUrl = 'https://www.uml-diagrams.org/library-domain-uml-class-diagram-example.html';
var modelDocumentationUrl = '';
var definition = {
	"Classes": "Package with all classes.",
	"DataTypes": "Package with all data types.",
	"Enumerations": "",
	"StructuredDataTypes": "Usual details of date.",
	"Account": "Library user account.",
	"Author": "Author of a book.",
	"Book": "Description of a book.",
	"BookItem": "Book item in the library.",
	"Catalog": "Book item catalog.",
	"Library": "Book library.",
	"Patron": "Library user.",
	"AccountState": "State of a user account.",
	"Address": "Generic address.",
	"Date": "Usual date details.",
	"Format": "Book item format.",
	"FullName": "Full name.",
	"Language": "Available languages.",
	"ModelIdentification": "Attributes for the model identification with constant values.",
	"tooltip.aggregation-kind": "A shared aggregation is a variant of the association relationship; aggregation is more specific than association. It is an association that represents a part-whole or part-of relationship. The composite aggregation relationship is a stronger form of aggregation where the aggregate controls the lifecycle of the elements it aggregates.",
	"tooltip.association": "An association is a relationship between classes which is used to show that instances of classes could be linked to each other.",
	"tooltip.attribute": "Attributes (of a class of data type) hold data that is relevant to the entire class, not just a single object. For example, in a Car class, the number of wheels (assuming all cars have the same number) could be a class attribute.",
	"tooltip.canonical-xmi": "Canonical XMI constitutes a specific constrained format of XMI that supports interoperability between UML tools.",
	"tooltip.class": "A class classifies a set of objects and specifies the features that characterize the structure and behavior of those objects.",
	"tooltip.classifier": "Class or data type. ",
	"tooltip.coupling": "Coupling is the degree of interdependence between packages.",
	"tooltip.data-type": "Data types represent value types from primitive types like string or structured data types (other data types).",
	"tooltip.diagram": "A UML class diagram visually represents the structure of the class, including its attributes and their data types, as well as its relationships to other classes. ",
	"tooltip.enumeration": "An enumeration is a data type whose values are enumerated as defined enumeration literals.",
	"tooltip.encoding": "A target language refers to the programming language or platform for which the UML model is intended to be used to generate code.",
	"tooltip.enumeration-literal": "Enumeration literals are elements that represent named values in an enumeration.",
	"tooltip.inheritance": "The generalization relationship - also known as the inheritance relationship - captures the idea of one class, the so-called subclass, being a specialized form of the other (the superclass, super type, or base class). Where this relationship holds, the superclass is considered a generalization of the subclass. ",
	"tooltip.json-schema": "JSON Schema is the vocabulary that enables JSON data consistency, validity, and interoperability at scale.",
	"tooltip.json-ld": "JSON-LD is a method of encoding linked data using JSON and of serializing data similarly to traditional JSON.",
	"tooltip.multiplicity": "Multiplicity is a definition of cardinality - i.e. number of elements - of some collection of elements by providing an inclusive interval of non-negative integers to specify the allowable number of instances of described element. Multiplicity interval has some lower bound and (possibly infinite) upper bound.",
	"tooltip.navigability": "An end property of association is navigable from the opposite end(s) of association if instances of the classifier at this end of the link can be accessed efficiently at runtime from instances at the other ends of the link. The UML specification does not dictate how efficient this access should be or any specific mechanism to achieve the efficiency. It is implementation specific.",
	"tooltip.rdf-ontology": "RDF ontology is a formal representation of knowledge using the Resource Description Framework (RDF) that describes the concepts, relationships, and properties.",
	"tooltip.shacl": "Shapes Constraint Language (SHACL) is a language for describing Resource Description Framework (RDF) graphs. SHACL has been designed to enhance the semantic and technical interoperability layers of ontologies expressed as RDF graphs.",
	"tooltip.shex": "Shape Expressions (ShEx) is a data modelling language for validating and describing a Resource Description Framework (RDF).",
	"tooltip.usage": "Usage by a class or data type.",
	"tooltip.xml-schema": "XML Schema Definition specifies how to formally describe the elements in an Extensible Markup Language (XML) document.",
}
